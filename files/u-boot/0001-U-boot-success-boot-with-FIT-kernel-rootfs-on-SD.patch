From a25d0c70b70e51bbcb711fc42daaf35e79c7287b Mon Sep 17 00:00:00 2001
From: dzhang <daniel.zhang@aviatnet.com>
Date: Tue, 2 Feb 2021 11:17:47 +1300
Subject: [PATCH] U-boot success boot with FIT kernel, rootfs on SD

---
 arch/arm/dts/s5pc1xx-smdkc100.dts        |  15 +-
 arch/arm/mach-s5pc1xx/Kconfig            |   2 +
 arch/arm/mach-s5pc1xx/include/mach/cpu.h |  26 +--
 board/samsung/smdkc100/lowlevel_init.S   | 293 +++++++++++++++++++++++++++----
 board/samsung/smdkc100/smdkc100.c        |  39 ++++
 configs/smdkc100_defconfig               |  33 ++--
 include/configs/smdkc100.h               |  18 +-
 scripts/Makefile.spl                     |   2 +-
 tools/Makefile                           |   3 +
 tools/mksmart210.c                       |  91 ++++++++++
 10 files changed, 436 insertions(+), 86 deletions(-)
 create mode 100644 tools/mksmart210.c

diff --git a/arch/arm/dts/s5pc1xx-smdkc100.dts b/arch/arm/dts/s5pc1xx-smdkc100.dts
index d36d662..e3465ef 100644
--- a/arch/arm/dts/s5pc1xx-smdkc100.dts
+++ b/arch/arm/dts/s5pc1xx-smdkc100.dts
@@ -8,26 +8,19 @@
 /dts-v1/;
 
 #include "skeleton.dtsi"
-#include "s5pc100-pinctrl.dtsi"
 
 / {
 	model = "Samsung SMDKC100 based on S5PC100";
 	compatible = "samsung,smdkc100", "samsung,s5pc100";
 
 	aliases {
-		serial0 = "/serial@ec000000";
-		console = "/serial@ec000000";
-		pinctrl0 = &pinctrl0;
+		serial0 = "/serial@e2900000";
+		console = "/serial@e2900000";
 	};
 
-	pinctrl0: pinctrl@e0300000 {
-		compatible = "samsung,s5pc100-pinctrl";
-		reg = <0xe0200000 0x1000>;
-	};
-
-	serial@ec000000 {
+	serial@e2900000 {
 		compatible = "samsung,exynos4210-uart";
-		reg = <0xec000000 0x100>;
+		reg = <0xe2900000 0x100>;
 		interrupts = <0 51 0>;
 		id = <0>;
 	};
diff --git a/arch/arm/mach-s5pc1xx/Kconfig b/arch/arm/mach-s5pc1xx/Kconfig
index 8cffced..652525d 100644
--- a/arch/arm/mach-s5pc1xx/Kconfig
+++ b/arch/arm/mach-s5pc1xx/Kconfig
@@ -12,6 +12,8 @@ config TARGET_S5P_GONI
 
 config TARGET_SMDKC100
 	bool "Support smdkc100 board"
+    select SUPPORT_SPL
+    select SPL
 	select OF_CONTROL
 
 endchoice
diff --git a/arch/arm/mach-s5pc1xx/include/mach/cpu.h b/arch/arm/mach-s5pc1xx/include/mach/cpu.h
index 78c905b..0119199 100644
--- a/arch/arm/mach-s5pc1xx/include/mach/cpu.h
+++ b/arch/arm/mach-s5pc1xx/include/mach/cpu.h
@@ -14,17 +14,21 @@
 /* S5PC100 */
 #define S5PC100_PRO_ID		0xE0000000
 #define S5PC100_CLOCK_BASE	0xE0100000
-#define S5PC100_GPIO_BASE	0xE0300000
-#define S5PC100_VIC0_BASE	0xE4000000
-#define S5PC100_VIC1_BASE	0xE4100000
-#define S5PC100_VIC2_BASE	0xE4200000
+#define S5PC100_GPIO_BASE	0xE0200000
+#define S5PC100_VIC0_BASE	0xF2000000
+#define S5PC100_VIC1_BASE	0xF2100000
+#define S5PC100_VIC2_BASE	0xF2200000
+#define S5PC100_VIC3_BASE	0xF2300000
 #define S5PC100_DMC_BASE	0xE6000000
-#define S5PC100_SROMC_BASE	0xE7000000
-#define S5PC100_ONENAND_BASE	0xE7100000
-#define S5PC100_PWMTIMER_BASE	0xEA000000
-#define S5PC100_WATCHDOG_BASE	0xEA200000
-#define S5PC100_UART_BASE	0xEC000000
-#define S5PC100_MMC_BASE	0xED800000
+#define S5PC100_SROMC_BASE	0xE8000000
+#define S5PC100_ONENAND_BASE	0xB0600100
+#define S5PC100_PWMTIMER_BASE	0xE2500000
+#define S5PC100_WATCHDOG_BASE	0xE2700000
+#define S5PC100_UART_BASE	0xE2900000
+#define S5PC100_MMC_BASE	0xEB000000
+#define S5PC100_DMC0_BASE	0xF0000000
+#define S5PC100_DMC1_BASE	0xF1400000
+#define S5PC100_LCD_BASE	0xF8000000
 
 /* S5PC110 */
 #define S5PC110_PRO_ID		0xE0000000
@@ -43,7 +47,7 @@
 #define S5PC110_VIC3_BASE	0xF2300000
 #define S5PC110_OTG_BASE	0xEC000000
 #define S5PC110_PHY_BASE	0xEC100000
-#define S5PC110_USB_PHY_CONTROL 0xE010E80C
+#define S5PC110_USB_PHY_CONTROL	0xE010E80C
 
 
 #ifndef __ASSEMBLY__
diff --git a/board/samsung/smdkc100/lowlevel_init.S b/board/samsung/smdkc100/lowlevel_init.S
index 3fbe66e..0fc78ee 100644
--- a/board/samsung/smdkc100/lowlevel_init.S
+++ b/board/samsung/smdkc100/lowlevel_init.S
@@ -19,6 +19,8 @@
 lowlevel_init:
 	mov	r9, lr
 
+#if CONFIG_SPL_BUILD
+
 	/* r5 has always zero */
 	mov	r5, #0
 
@@ -38,32 +40,47 @@ lowlevel_init:
 	ldr	r0, =S5PC100_VIC0_BASE			@0xE4000000
 	ldr	r1, =S5PC100_VIC1_BASE			@0xE4000000
 	ldr	r2, =S5PC100_VIC2_BASE			@0xE4000000
+	ldr	r3, =S5PC100_VIC3_BASE			@0xE4000000
 
 	/* Disable all interrupts (VIC0, VIC1 and VIC2) */
-	mvn	r3, #0x0
-	str	r3, [r0, #0x14]				@INTENCLEAR
-	str	r3, [r1, #0x14]				@INTENCLEAR
-	str	r3, [r2, #0x14]				@INTENCLEAR
+	mvn	r4, #0x0
+	str	r4, [r0, #0x14]				@INTENCLEAR
+	str	r4, [r1, #0x14]				@INTENCLEAR
+	str	r4, [r2, #0x14]				@INTENCLEAR
+	str	r4, [r3, #0x14]				@INTENCLEAR
 
 	/* Set all interrupts as IRQ */
 	str	r5, [r0, #0xc]				@INTSELECT
 	str	r5, [r1, #0xc]				@INTSELECT
 	str	r5, [r2, #0xc]				@INTSELECT
+	str	r5, [r3, #0xc]				@INTSELECT
 
 	/* Pending Interrupt Clear */
 	str	r5, [r0, #0xf00]			@INTADDRESS
 	str	r5, [r1, #0xf00]			@INTADDRESS
 	str	r5, [r2, #0xf00]			@INTADDRESS
+	str	r5, [r3, #0xf00]			@INTADDRESS
+
+	/* for CLOCK */
+	bl system_clock_init
+
+	/* for DDR */
+	bl system_ddr_init
+
+	/* copy image */
+	bl copy_bl2_to_ram 
 
 	/* for UART */
 	bl uart_asm_init
 
 	/* for TZPC */
 	bl tzpc_asm_init
+#endif
 
-1:
-	mov	lr, r9
-	mov	pc, lr
+	mov lr, r9
+	mov pc, lr
+
+#ifdef CONFIG_SPL_BUILD
 
 /*
  * system_clock_init: Initialize core clock and bus clock.
@@ -72,48 +89,223 @@ lowlevel_init:
 system_clock_init:
 	ldr	r8, =S5PC100_CLOCK_BASE		@ 0xE0100000
 
-	/* Set Clock divider */
-	ldr	r1, =0x00011110
-	str	r1, [r8, #0x304]
-	ldr	r1, =0x1
-	str	r1, [r8, #0x308]
-	ldr	r1, =0x00011301
-	str	r1, [r8, #0x300]
-
 	/* Set Lock Time */
 	ldr	r1, =0xe10			@ Locktime : 0xe10 = 3600
 	str	r1, [r8, #0x000]		@ APLL_LOCK
-	str	r1, [r8, #0x004]		@ MPLL_LOCK
-	str	r1, [r8, #0x008]		@ EPLL_LOCK
-	str	r1, [r8, #0x00C]		@ HPLL_LOCK
+	str	r1, [r8, #0x008]		@ MPLL_LOCK
+	str	r1, [r8, #0x010]		@ EPLL_LOCK
+	str	r1, [r8, #0x020]		@ VPLL_LOCK
 
 	/* APLL_CON */
-	ldr	r1, =0x81bc0400		@ SDIV 0, PDIV 4, MDIV 444 (1332MHz)
+	ldr	r1, =0x807d0301		@ SDIV 0, PDIV 4, MDIV 444 (1332MHz)
 	str	r1, [r8, #0x100]
 	/* MPLL_CON */
-	ldr	r1, =0x80590201		@ SDIV 1, PDIV 2, MDIV 89 (267MHz)
-	str	r1, [r8, #0x104]
-	/* EPLL_CON */
-	ldr	r1, =0x80870303		@ SDIV 3, PDIV 3, MDIV 135 (67.5MHz)
+	ldr	r1, =0x829b0c01		@ SDIV 1, PDIV 2, MDIV 89 (267MHz)
 	str	r1, [r8, #0x108]
-	/* HPLL_CON */
-	ldr	r1, =0x80600603
-	str	r1, [r8, #0x10C]
+	/* EPLL_CON */
+	ldr	r1, =0x80300302		@ SDIV 3, PDIV 3, MDIV 135 (67.5MHz)
+	str	r1, [r8, #0x110]
+	/* VPLL_CON */
+	ldr	r1, =0x806c0603
+	str	r1, [r8, #0x120]
 
 	/* Set Source Clock */
 	ldr	r1, =0x1111			@ A, M, E, HPLL Muxing
 	str	r1, [r8, #0x200]		@ CLK_SRC0
+	
+	/* Set Clock divider */
+	ldr	r1, =0x14131440
+	str	r1, [r8, #0x300]
 
-	ldr	r1, =0x1000001			@ Uart Clock & CLK48M Muxing
-	str	r1, [r8, #0x204]		@ CLK_SRC1
+	#ldr	r1, =0x1000001			@ Uart Clock & CLK48M Muxing
+	#str	r1, [r8, #0x204]		@ CLK_SRC1
 
-	ldr	r1, =0x9000			@ ARMCLK/4
-	str	r1, [r8, #0x400]		@ CLK_OUT
+	#ldr	r1, =0x9000			@ ARMCLK/4
+	#str	r1, [r8, #0x500]		@ CLK_OUT
 
 	/* wait at least 200us to stablize all clock */
-	mov	r2, #0x10000
-1:	subs	r2, r2, #1
-	bne	1b
+	mov	r2, #0x100000
+9:	subs	r2, r2, #1
+	bne	9b
+
+	mov	pc, lr
+
+/*
+ * system_ddr_init: Initialize DDR memory
+ */
+system_ddr_init:
+	ldr	r8, =S5PC100_DMC0_BASE		@ 0xF0000000
+
+	/* PHYCONTROL0 */
+	ldr	r1, =0x00101000
+	str	r1, [r8, #0x18]
+	/* PHYCONTROL0 */
+	ldr	r1, =0x00101002
+	str	r1, [r8, #0x18]
+	/* PHYCONTROL1 */
+	ldr	r1, =0x00000086
+	str	r1, [r8, #0x1C]
+	/* PHYCONTROL0 */
+	ldr	r1, =0x00101003
+	str	r1, [r8, #0x18]
+
+	/* wait at least 200us to stablize all clock */
+	mov	r2, #0x100000
+10:	subs	r2, r2, #1
+	bne	10b
+
+	/* CONCONTROL */
+	ldr	r1, =0x0FFF2350
+	str	r1, [r8, #0x0]
+	/* MEMCONTROL */
+	ldr	r1, =0x00202430
+	str	r1, [r8, #0x4]
+	/* MEMCONFIG0 */
+	ldr	r1, =0x20E01323
+	str	r1, [r8, #0x8]
+
+	/* prechconfig */
+	ldr	r1, =0xFF000000
+	str	r1, [r8, #0x14]
+	/* pwrdnconfig */
+	ldr	r1, =0xFFFF00FF
+	str	r1, [r8, #0x28]
+
+	/* timingaref */
+	ldr	r1, =0x00000618
+	str	r1, [r8, #0x30]
+	/* timingrow */
+	ldr	r1, =0x19233309
+	str	r1, [r8, #0x34]
+	/* timingdata */
+	ldr	r1, =0x23240204
+	str	r1, [r8, #0x38]
+	/* timingpower */
+	ldr	r1, =0x09C80232
+	str	r1, [r8, #0x3c]
+
+	/* directcmd */
+	ldr	r1, =0x07000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x01000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00020000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00030000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00010400
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00000542
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x01000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x05000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x05000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00000442
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00010780
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00010400
+	str	r1, [r8, #0x10]
+
+	/* CONCONTROL */
+	ldr	r1, =0x0FF02030
+	str	r1, [r8, #0x0]
+	/* pwrdnconfig */
+	ldr	r1, =0xFFFF00FF
+	str	r1, [r8, #0x28]
+	/* MEMCONTROL */
+	ldr	r1, =0x00202400
+	str	r1, [r8, #0x4]
+
+	/* DMC1 */
+	ldr	r8, =S5PC100_DMC1_BASE		@ 0xF1400000
+
+	/* PHYCONTROL0 */
+	ldr	r1, =0x00101000
+	str	r1, [r8, #0x18]
+	/* PHYCONTROL0 */
+	ldr	r1, =0x00101002
+	str	r1, [r8, #0x18]
+	/* PHYCONTROL1 */
+	ldr	r1, =0x00000086
+	str	r1, [r8, #0x1C]
+	/* PHYCONTROL0 */
+	ldr	r1, =0x00101003
+	str	r1, [r8, #0x18]
+
+/* wait at least 200us to stablize all clock */
+	mov	r2, #0x100000
+11:	subs	r2, r2, #1
+	bne	11b
+
+	/* CONCONTROL */
+	ldr	r1, =0x0FFF2350
+	str	r1, [r8, #0x0]
+	/* MEMCONTROL */
+	ldr	r1, =0x00202430
+	str	r1, [r8, #0x4]
+	/* MEMCONFIG0 */
+	ldr	r1, =0x20E01323
+	str	r1, [r8, #0x8]
+
+	/* prechconfig */
+	ldr	r1, =0xFF000000
+	str	r1, [r8, #0x14]
+	/* pwrdnconfig */
+	ldr	r1, =0xFFFF00FF
+	str	r1, [r8, #0x28]
+
+	/* timingaref */
+	ldr	r1, =0x00000618
+	str	r1, [r8, #0x30]
+	/* timingrow */
+	ldr	r1, =0x19233309
+	str	r1, [r8, #0x34]
+	/* timingdata */
+	ldr	r1, =0x23240204
+	str	r1, [r8, #0x38]
+	/* timingpower */
+	ldr	r1, =0x09C80232
+	str	r1, [r8, #0x3c]
+
+	/* directcmd */
+	ldr	r1, =0x07000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x01000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00020000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00030000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00010400
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00000542
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x01000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x05000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x05000000
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00000442
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00010780
+	str	r1, [r8, #0x10]
+	ldr	r1, =0x00010400
+	str	r1, [r8, #0x10]
+
+	/* CONCONTROL */
+	ldr	r1, =0x0FF02030
+	str	r1, [r8, #0x0]
+	/* pwrdnconfig */
+	ldr	r1, =0xFFFF00FF
+	str	r1, [r8, #0x28]
+	/* MEMCONTROL */
+	ldr	r1, =0x00202400
+	str	r1, [r8, #0x4]
 
 	mov	pc, lr
 
@@ -121,32 +313,57 @@ system_clock_init:
  * uart_asm_init: Initialize UART's pins
  */
 uart_asm_init:
+	ldr	r8, =S5PC100_GPIO_BASE
 	mov	r0, r8
 	ldr	r1, =0x22222222
 	str	r1, [r0, #0x0]			@ GPA0_CON
 	ldr	r1, =0x00022222
 	str	r1, [r0, #0x20]			@ GPA1_CON
 
-	mov	pc, lr
+	ldr r8, =0xe2900000
+	mov r0, r8
+	ldr r1, =0x1
+	str r1, [r0, #0x8]
+	ldr r1, =0
+	str r1, [r0, #0xc]
+	ldr r1, =0x3
+	str r1, [r0, #0x0]
+	ldr r1, =0x5
+	str r1, [r0, #0x4]
+
+	ldr r1, =35
+	str r1, [r0, #0x28]
+	ldr r1, =0x1
+	str r1, [r0, #0x2c]
+
+	mov pc, lr
 
 /*
  * tzpc_asm_init: Initialize TZPC
  */
 tzpc_asm_init:
-	ldr	r0, =0xE3800000
+	ldr	r0, =0xF1500000
 	mov	r1, #0x0
 	str	r1, [r0]
 	mov	r1, #0xff
 	str	r1, [r0, #0x804]
 	str	r1, [r0, #0x810]
+	str	r1, [r0, #0x81C]
 
-	ldr	r0, =0xE2800000
+	ldr	r0, =0xFAD00000
 	str	r1, [r0, #0x804]
 	str	r1, [r0, #0x810]
 	str	r1, [r0, #0x81C]
 
-	ldr	r0, =0xE2900000
+	ldr	r0, =0xE0600000
 	str	r1, [r0, #0x804]
 	str	r1, [r0, #0x810]
+	str	r1, [r0, #0x81C]
+	str	r1, [r0, #0x828]
 
-	mov	pc, lr
+	ldr	r0, =0xE1C00000
+	str	r1, [r0, #0x804]
+
+	mov pc, lr
+
+#endif
diff --git a/board/samsung/smdkc100/smdkc100.c b/board/samsung/smdkc100/smdkc100.c
index d034f53..4c10452 100644
--- a/board/samsung/smdkc100/smdkc100.c
+++ b/board/samsung/smdkc100/smdkc100.c
@@ -16,6 +16,45 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
+#ifdef CONFIG_SPL_BUILD
+
+void board_init_f(ulong bootflag)
+{
+    __attribute__((noreturn)) void (*uboot)(void);
+    uboot = (void *)0x20000000;
+    (*uboot)();
+}
+
+void copy_bl2_to_ram(void)
+{
+#define CopySDMMCtoMem(ch, sb, bs, dst, i) \
+        (((u8(*)(int, u32, unsigned short, u32*, u8))\
+        (*((u32 *)0xD0037F98)))(ch, sb, bs, dst, i))
+
+    u32 V210_SDMMC_BASE = *(volatile u32 *)(0xD0037488);    // V210_SDMMC_BASE
+
+    if (V210_SDMMC_BASE == 0xEB000000) {
+        CopySDMMCtoMem(0, 32,    1000,  (u32 *)0x20000000, 0);            //  500K   u-boot
+        CopySDMMCtoMem(0, 1032,  12288, (u32 *)0x23000000, 0);            //  6M     kernel
+    }
+}
+#else
+
+void uart_test(void)
+{
+#define UTRSTAT0 		( *((volatile unsigned long *)0xE2900010) )
+#define UTXH0 			( *((volatile unsigned long *)0xE2900020) )
+    char out[12] = "Hello world";
+    int i = 0;
+
+    for (i=0;i<11;i++) {
+	      while (!(UTRSTAT0 & (1<<2)));
+	      UTXH0 = out[i];                      	
+    }
+}
+
+#endif
+
 /*
  * Miscellaneous platform dependent initialisations
  */
diff --git a/configs/smdkc100_defconfig b/configs/smdkc100_defconfig
index e12ac6a..88f3222 100644
--- a/configs/smdkc100_defconfig
+++ b/configs/smdkc100_defconfig
@@ -1,30 +1,35 @@
 CONFIG_ARM=y
+CONFIG_FIT=y
 CONFIG_ARCH_CPU_INIT=y
 CONFIG_ARCH_S5PC1XX=y
-CONFIG_SYS_TEXT_BASE=0x34800000
+CONFIG_SYS_TEXT_BASE=0x20000000
 CONFIG_NR_DRAM_BANKS=1
-CONFIG_ENV_SIZE=0x20000
+# CONFIG_ENV_SIZE=0x20000
 CONFIG_TARGET_SMDKC100=y
 CONFIG_IDENT_STRING=" for SMDKC100"
 CONFIG_DEFAULT_DEVICE_TREE="s5pc1xx-smdkc100"
 CONFIG_BOOTDELAY=3
 CONFIG_USE_BOOTARGS=y
-CONFIG_BOOTARGS="root=/dev/mtdblock5 ubi.mtd=4 rootfstype=cramfs console=ttySAC0,115200n8 mem=128M  mtdparts=s3c-onenand:256k(bootloader),128k@0x40000(params),3m@0x60000(kernel),16m@0x360000(test),-(UBI)"
+CONFIG_BOOTARGS="root=/dev/ram0 rw console=ttySAC0,115200n8 init=/linuxrc"
+CONFIG_BOOTCOMMAND="bootm 0x23000000 0x23500000 0x33000000"
 CONFIG_HUSH_PARSER=y
 # CONFIG_AUTO_COMPLETE is not set
 CONFIG_SYS_PROMPT="SMDKC100 # "
 # CONFIG_CMD_FLASH is not set
-CONFIG_CMD_ONENAND=y
+# CONFIG_CMD_ONENAND=y
 # CONFIG_CMD_SETEXPR is not set
 CONFIG_CMD_CACHE=y
-CONFIG_CMD_FAT=y
-CONFIG_CMD_MTDPARTS=y
-CONFIG_MTDIDS_DEFAULT="onenand0=s3c-onenand"
-CONFIG_MTDPARTS_DEFAULT="mtdparts=s3c-onenand:256k(bootloader),128k@0x40000(params),3m@0x60000(kernel),16m@0x360000(test),-(UBI)"
-CONFIG_ENV_OVERWRITE=y
-CONFIG_ENV_IS_IN_ONENAND=y
-CONFIG_ENV_ADDR=0x40000
+# CONFIG_CMD_FAT=y
+# CONFIG_CMD_MTDPARTS=y
+# CONFIG_MTDIDS_DEFAULT="onenand0=s3c-onenand"
+# CONFIG_MTDPARTS_DEFAULT="mtdparts=s3c-onenand:256k(bootloader),128k@0x40000(params),3m@0x60000(kernel),16m@0x360000(test),-(UBI)"
+# CONFIG_ENV_OVERWRITE=y
+# CONFIG_ENV_IS_IN_ONENAND=y
+# CONFIG_ENV_ADDR=0x40000
 # CONFIG_MMC is not set
-CONFIG_MTD=y
-CONFIG_SMC911X=y
-CONFIG_SMC911X_BASE=0x98800300
+# CONFIG_MTD=y
+# CONFIG_SMC911X=y
+# CONFIG_SMC911X_BASE=0x98800300
+CONFIG_SPL=y
+CONFIG_SUPPORT_SPL=y
+# CONFIG_SPL_FRAMEWORK is not set
diff --git a/include/configs/smdkc100.h b/include/configs/smdkc100.h
index 77773cd..af37c62 100644
--- a/include/configs/smdkc100.h
+++ b/include/configs/smdkc100.h
@@ -22,10 +22,10 @@
 #include <asm/arch/cpu.h>		/* get chip and board defs */
 
 /* input clock of PLL: SMDKC100 has 12MHz input clock */
-#define CONFIG_SYS_CLK_FREQ		12000000
+#define CONFIG_SYS_CLK_FREQ		24000000
 
 /* DRAM Base */
-#define CONFIG_SYS_SDRAM_BASE		0x30000000
+#define CONFIG_SYS_SDRAM_BASE		0x20000000
 
 /* Text Base */
 
@@ -46,7 +46,7 @@
 /* PWM */
 #define CONFIG_PWM			1
 
-#define CONFIG_BOOTCOMMAND	"run ubifsboot"
+#define CONFIG_BOOTCOMMAND	"set bootargs root=/dev/mmcblk0p1 rw console=ttySAC0,115200n8 init=/linuxrc; bootm 0x23000000"
 
 #define CONFIG_RAMDISK_BOOT	"root=/dev/ram0 rw rootfstype=ext2" \
 				" console=ttySAC0,115200n8" \
@@ -54,7 +54,7 @@
 
 #define CONFIG_COMMON_BOOT	"console=ttySAC0,115200n8" \
 				" mem=128M " \
-				" " CONFIG_MTDPARTS_DEFAULT
+				" "
 
 #define CONFIG_UPDATEB	"updateb=onenand erase 0x0 0x40000;" \
 			" onenand write 0x32008000 0x0 0x40000\0"
@@ -94,7 +94,7 @@
 		"set bootargs " CONFIG_RAMDISK_BOOT \
 		" initrd=0x33000000,8M ramdisk=8192\0" \
 	"rootfstype=cramfs\0" \
-	"mtdparts=" CONFIG_MTDPARTS_DEFAULT "\0" \
+	"mtdparts=\0" \
 	"meminfo=mem=128M\0" \
 	"nfsroot=/nfsroot/arm\0" \
 	"bootblock=5\0" \
@@ -110,7 +110,7 @@
 
 /* SMDKC100 has 1 banks of DRAM, we use only one in U-Boot */
 #define PHYS_SDRAM_1		CONFIG_SYS_SDRAM_BASE	/* SDRAM Bank #1 */
-#define PHYS_SDRAM_1_SIZE	(128 << 20)	/* 0x8000000, 128 MB Bank #1 */
+#define PHYS_SDRAM_1_SIZE	(512 << 20)	/* 0x8000000, 128 MB Bank #1 */
 
 #define CONFIG_SYS_MONITOR_BASE	0x00000000
 
@@ -134,11 +134,7 @@
  * Boot configuration
  */
 
-#define CONFIG_USE_ONENAND_BOARD_INIT
-#define CONFIG_SAMSUNG_ONENAND		1
-#define CONFIG_SYS_ONENAND_BASE		0xE7100000
-
-#define CONFIG_SYS_INIT_SP_ADDR	(CONFIG_SYS_LOAD_ADDR - 0x1000000)
+#define CONFIG_SYS_INIT_SP_ADDR 0x40000000
 
 /*
  * Ethernet Contoller driver
diff --git a/scripts/Makefile.spl b/scripts/Makefile.spl
index ea4e045..107d98b 100644
--- a/scripts/Makefile.spl
+++ b/scripts/Makefile.spl
@@ -340,7 +340,7 @@ endif
 $(obj)/$(BOARD)-spl.bin: $(obj)/u-boot-spl.bin
 	$(if $(wildcard $(objtree)/spl/board/samsung/$(BOARD)/tools/mk$(BOARD)spl),\
 	$(objtree)/spl/board/samsung/$(BOARD)/tools/mk$(BOARD)spl,\
-	$(objtree)/tools/mkexynosspl) $(VAR_SIZE_PARAM) $< $@
+	$(objtree)/tools/mksmart210) $(VAR_SIZE_PARAM) $< $@
 endif
 
 quiet_cmd_objcopy = OBJCOPY $@
diff --git a/tools/Makefile b/tools/Makefile
index 2d55043..4bd1696 100644
--- a/tools/Makefile
+++ b/tools/Makefile
@@ -180,6 +180,9 @@ hostprogs-$(CONFIG_EXYNOS5250) += mkexynosspl
 hostprogs-$(CONFIG_EXYNOS5420) += mkexynosspl
 HOSTCFLAGS_mkexynosspl.o := -pedantic
 
+hostprogs-$(CONFIG_S5PC100) += mksmart210
+HOSTCFLAGS_mksmart210.o := -pedantic
+
 ifdtool-objs := $(LIBFDT_OBJS) ifdtool.o
 hostprogs-$(CONFIG_X86) += ifdtool
 
diff --git a/tools/mksmart210.c b/tools/mksmart210.c
new file mode 100644
index 0000000..7783b4c
--- /dev/null
+++ b/tools/mksmart210.c
@@ -0,0 +1,91 @@
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+
+#define IMG_SIZE        16 * 1024
+#define HEADER_SIZE     16
+
+int main (int argc, char *argv[])
+{
+        FILE                    *fp;
+        unsigned                char *buffer;
+        int                             bufferLen;
+        int                             nbytes, fileLen;
+        unsigned int    checksum, count;
+        int                             i;
+
+        if (argc != 3)
+        {
+                printf("Usage: %s <source file> <destination file>\n", argv[0]);
+                return -1;
+        }
+
+        /* 分配16KByte的buffer,BL1最大为16KByte,并初始化为0 */
+        buffer = calloc(1, IMG_SIZE);
+        if (!buffer)
+        {
+                perror("Alloc buffer failed!");
+                return -1;
+        }
+
+        /* 打开源bin文件 */
+        fp = fopen(argv[1], "rb");
+        if( fp == NULL)
+        {
+                perror("source file open error");
+                free(buffer);
+                return -1;
+        }
+        /* 获取源bin文件的长度 */
+        fseek(fp, 0L, SEEK_END);
+        fileLen = ftell(fp);
+        fseek(fp, 0L, SEEK_SET);
+
+        /* 源bin文件不得超过(16K-16)Byte */
+        if (fileLen > (IMG_SIZE - HEADER_SIZE))
+        {
+                fprintf(stderr, "Source file is too big(> 16KByte)\n");
+                free(buffer);
+                fclose(fp);
+        }
+
+        /* 计算校验和 */
+        i = 0;
+        checksum = 0;
+        while (fread(buffer + HEADER_SIZE + i, 1, 1, fp))
+        {
+                checksum += buffer[HEADER_SIZE + i++];
+        }
+        fclose(fp);
+
+
+        /* 计算BL1的大小(BL1的大小包括BL1的头信息),并保存到buffer[0~3]中 */
+        fileLen += HEADER_SIZE;
+        memcpy(buffer, &fileLen, 4);
+
+        // 将校验和保存在buffer[8~15]
+        memcpy(buffer + 8, &checksum, 4);
+
+        /* 打开目标文件 */
+        fp = fopen(argv[2], "wb");
+        if (fp == NULL)
+        {
+                perror("destination file open error");
+                free(buffer);
+                return -1;
+        }
+		// 将buffer拷贝到目标bin文件中
+        nbytes  = fwrite(buffer, 1, fileLen, fp);
+        if (nbytes != fileLen)
+        {
+                perror("destination file write error");
+                free(buffer);
+                fclose(fp);
+                return -1;
+        }
+
+        free(buffer);
+        fclose(fp);
+
+        return 0;
+}
-- 
2.7.4

